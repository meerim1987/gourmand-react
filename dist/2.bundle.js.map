{"version":3,"sources":["webpack:///./src/Components/CloudTag.jsx","webpack:///./src/Components/SignIn.jsx","webpack:///./src/Components/CommentList.jsx","webpack:///./src/Components/CommentBox.jsx","webpack:///./src/Components/ImageGallery.jsx","webpack:///./src/Pages/RecipePage.jsx"],"names":["CloudTag","ctgInfo","useFetch","CATEGORIES_INFO","data","Fragment","className","Object","keys","Categories","map","ctg","index","key","to","replaceParams","CATEGORY","Map","PARAM_CATEGORY","count","initForms","userName","password","initFormErrors","usernameError","passwordError","SignIn","useState","fields","setFields","errors","setErrors","history","useHistory","LOGIN","PARAM_EMAIL","PARAM_PASSWORD","credentials","content","get","useEffect","success","sessionStorage","setItem","reset","fullName","window","toaster","addMessage","getItem","push","handleChange","target","name","value","handleSubmit","e","a","preventDefault","stateUpdate","forEach","fieldName","onChange","type","placeholder","userNameError","onClick","STATE","CommentItem","comment","userAvatar","date","text","height","src","href","CommentList","newComment","recipeId","list","setList","offset","setOffset","state","setState","setCount","getList","fetch","getUrl","COMMENT_LIST","PARAM_ID","PARAM_FIRST","PARAM_COUNT","result","json","newOffset","el","Loader","CommentBox","props","setComment","id","setNewComment","loaderState","setLoader","error","setError","ADD_COMMENT","method","headers","Accept","body","JSON","stringify","commentText","submitComment","htmlFor","cols","rows","ImageGallery","showModal","setShowModal","pictures","setPictures","currentPic","setCurrentPic","i","photo","fill","version","xmlns","d","filter","length","RecipePage","ticked","setTick","match","params","RECIPE","recipeData","fetching","ingredients","PageFrame","title","width","photos","rel","dateTime","addDatetime","moment","unix","format","category","categ","charAt","toUpperCase","slice","description","ingr","tickFn","directions","direction","AuthorField"],"mappings":"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","file":"2.bundle.js","sourcesContent":["import React from 'react';\nimport { Categories } from '../constants/data';\nimport { Link } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { useFetch } from '../utils/useFetch';\nimport { CATEGORIES_INFO } from '../constants/url';\nimport { CATEGORY, PARAM_CATEGORY, replaceParams } from '../constants/routes';\n\nexport const CloudTag = () => {\n  const { data: ctgInfo } = useFetch(CATEGORIES_INFO);\n\n  return (\n    <React.Fragment>\n      {ctgInfo ? (\n        <div className=\"links-cloud-wrap\">\n          <h3 className=\"title\">Categories</h3>\n          <div className=\"links-cloud\">\n            {Object.keys(Categories).map((ctg, index) => (\n              <Link key={index} to={replaceParams(CATEGORY, new Map([[PARAM_CATEGORY, ctg]]))}>\n                {ctg}\n                <span className=\"ctg-count\">{ctgInfo?.[ctg]?.count || 0}</span>\n              </Link>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div className=\"loader-container\">{<Loader />}</div>\n      )}\n    </React.Fragment>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useFetch } from '../utils/useFetch';\nimport { LOGIN } from '../constants/url';\nimport { PARAM_EMAIL, PARAM_PASSWORD, replaceParams } from '../constants/routes';\n\nconst initForms = {\n  userName: '',\n  password: '',\n};\n\nconst initFormErrors = {\n  usernameError: false,\n  passwordError: false,\n};\n\nconst SignIn = () => {\n  const [fields, setFields] = useState({ ...initForms });\n  const [errors, setErrors] = useState({ ...initFormErrors });\n  const history = useHistory();\n\n  const { data: content, get } = useFetch(\n    replaceParams(\n      LOGIN,\n      new Map([\n        [PARAM_EMAIL, fields?.userName],\n        [PARAM_PASSWORD, fields?.password],\n      ])\n    ),\n    true,\n    { credentials: 'include' }\n  );\n\n  useEffect(() => {\n    if (content === null) return;\n\n    if (content.success) {\n      sessionStorage.setItem('isLoggedIn', true);\n      reset();\n      const fullName = content.fullName;\n      window.toaster.addMessage('Welcome, ' + fullName + '!', 'info');\n      sessionStorage.setItem('name', fullName);\n\n      // Redirect to previous page or to homepage\n      if (sessionStorage.getItem('prevUrl')) {\n        history.push(sessionStorage.getItem('prevUrl'));\n      } else {\n        history.push('/');\n      }\n    } else {\n      window.toaster.addMessage('Not a valid username or password!', 'error');\n    }\n  }, [content]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    setFields({ ...fields, [name]: value });\n  };\n\n  const reset = () => {\n    setFields({ ...initForms });\n    setFields({ ...initFormErrors });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const stateUpdate = {};\n    Object.keys(initForms).forEach((fieldName) => (stateUpdate[`${fieldName}Error`] = !fields[fieldName]));\n    setErrors(stateUpdate);\n\n    if (!fields.userName || !fields.password) {\n      window.toaster.addMessage('The field is required!', 'error');\n    } else {\n      get();\n    }\n  };\n\n  return (\n    <section className=\"login-field\">\n      <form>\n        <fieldset>\n          <legend className=\"title\">Please log in</legend>\n          <label>\n            <input\n              value={fields.userName}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"userName\"\n              placeholder=\"Username\"\n              className={'text' + (errors.userNameError ? ' error-active' : '')}\n            />\n          </label>\n          <label>\n            <input\n              value={fields.password}\n              onChange={handleChange}\n              type=\"password\"\n              name=\"password\"\n              className={'text' + (errors.passwordError ? ' error-active' : '')}\n              placeholder=\"Password\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Login\" onClick={handleSubmit} />\n          <div className=\"result-cont\" />\n        </fieldset>\n      </form>\n    </section>\n  );\n};\n\nexport default SignIn;\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from './Loader';\nimport { COMMENT_LIST, getUrl } from '../constants/url';\nimport { PARAM_COUNT, PARAM_FIRST, PARAM_ID } from '../constants/routes';\n\nconst COMMENTS_COUNT_ON_PAGE = 3;\nconst STATE = {\n  LOADING: 1,\n  LOAD_MORE: 2,\n  EMPTY: 3,\n};\nconst CommentItem = ({ comment: { userAvatar, fullName, date, text } }) => {\n  return (\n    <li>\n      <div className=\"comment-area\">\n        <div className=\"avatar-wrap\">\n          <figure>\n            <img height=\"72\" src={userAvatar} className=\"avatar\" />\n          </figure>\n        </div>\n        <div className=\"comment-wrap\">\n          <cite className=\"fn\">\n            <a href=\"javascript:\">{fullName}</a>\n          </cite>\n          <div className=\"comment-metadata\">\n            <a href=\"javascript:\">{date}</a>\n          </div>\n          <div className=\"comment-body\">\n            <p>{text}</p>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport const CommentList = ({ newComment, recipeId }) => {\n  let [list, setList] = useState([]);\n  let [offset, setOffset] = useState(0);\n  let [state, setState] = useState(STATE.LOADING);\n  let [count, setCount] = useState(0);\n\n  const getList = async () => {\n    setState(STATE.LOADING);\n\n    const result = await fetch(\n      getUrl(\n        COMMENT_LIST,\n        new Map([\n          [PARAM_ID, recipeId],\n          [PARAM_FIRST, offset],\n          [PARAM_COUNT, COMMENTS_COUNT_ON_PAGE],\n        ])\n      )\n    );\n    const data = await result.json();\n    const newOffset = offset + COMMENTS_COUNT_ON_PAGE;\n    setList([...list, ...data.list]);\n    setOffset(newOffset);\n    setState(data.count > newOffset ? STATE.LOAD_MORE : STATE.EMPTY);\n    setCount(data.count);\n  };\n\n  useEffect(() => {\n    (async () => {\n      await getList();\n    })();\n  }, []);\n\n  useEffect(() => {\n    setList([newComment, ...list]);\n    setCount(count + 1);\n  }, [newComment]);\n\n  return (\n    <section className=\"comments\">\n      <h3>{count} Comments</h3>\n      <ol className=\"commentslist\">\n        {list.map((el, index) => {\n          return <CommentItem comment={el} key={index} />;\n        })}\n      </ol>\n      <div className=\"form-submit\">\n        {state === STATE.LOADING && (\n          <div className=\"loader-container\">\n            <Loader />\n          </div>\n        )}\n        {state === STATE.LOAD_MORE && (\n          <input className=\"loadMore-button\" type=\"button\" onClick={getList} value=\"Load More...\" />\n        )}\n      </div>\n    </section>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { CommentList } from './CommentList';\nimport { Loader } from './Loader';\nimport { useFetch } from '../utils/useFetch';\nimport { ADD_COMMENT } from '../constants/url';\n\nconst STATE = { LOADING: 1, LOADED: 2 };\n\nexport const CommentBox = (props) => {\n  let [comment, setComment] = useState('');\n  let [newComment, setNewComment] = useState({ id: 0 });\n  let [loaderState, setLoader] = useState(STATE.LOADED);\n  const [error, setError] = useState(false);\n\n  const handleTextarea = ({ target: { value } }) => {\n    setComment(value);\n  };\n\n  const { data: content, get } = useFetch(ADD_COMMENT, true, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      commentText: comment,\n      recipeId: props.recipeId,\n    }),\n    credentials: 'include',\n  });\n\n  useEffect(() => {\n    if (content === null) return;\n\n    if (content.success) {\n      window.toaster.addMessage('Comment was successfully added!', 'info');\n      setComment('');\n      setLoader(STATE.LOADED);\n      setNewComment(content.comment);\n    } else {\n      window.toaster.addMessage('Server returned error', 'error');\n    }\n  }, [content]);\n\n  const submitComment = async () => {\n    if (!comment) {\n      window.toaster.addMessage('Please enter your comment here!', 'error');\n      setError(true);\n      return;\n    }\n    setError(false);\n    setLoader(STATE.LOADING);\n    get();\n  };\n\n  return (\n    <section className=\"comment-respond\">\n      <div className=\"article-container\">\n        {sessionStorage.getItem('isLoggedIn') && (\n          <section className=\"comment-respond\">\n            <h3 className=\"comment-respond-title\">Leave a Comment</h3>\n            <p>\n              <label htmlFor=\"comment\">Message</label>\n              <textarea\n                className={error ? 'textar-error' : ''}\n                cols=\"35\"\n                rows=\"5\"\n                value={comment}\n                onChange={handleTextarea}\n                placeholder=\"Please comment here...\"\n              />\n            </p>\n            <div className=\"form-submit\">\n              {loaderState === STATE.LOADING && (\n                <div className=\"loader-container\">\n                  <Loader />\n                </div>\n              )}\n              {loaderState === STATE.LOADED && <input type=\"button\" onClick={submitComment} value=\"Post Comment\" />}\n            </div>\n          </section>\n        )}\n        <CommentList newComment={newComment} recipeId={props.recipeId} />\n        {!sessionStorage.getItem('isLoggedIn') && <div className=\"comments-notice\">You need to sign in to comment</div>}\n      </div>\n    </section>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nconst START_IDX = 0;\n\n// Gallery of images in lightbox\n\nexport const ImageGallery = (props) => {\n  const [showModal, setShowModal] = useState(false);\n  const [pictures, setPictures] = useState([]);\n  const [currentPic, setCurrentPic] = useState(0);\n\n  const handleSelected = (index) => {\n    setCurrentPic(index);\n    setShowModal(true);\n  };\n\n  const handleClosePopup = () => {\n    setShowModal(false);\n  };\n\n  const moveForward = () => {\n    if (currentPic === pictures.length - 1) {\n      return;\n    }\n    setCurrentPic(currentPic + 1);\n  };\n\n  const moveBack = () => {\n    if (currentPic === START_IDX) {\n      return;\n    }\n    setCurrentPic(currentPic - 1);\n  };\n\n  useEffect(() => {\n    setPictures(props.pictures);\n  }, []);\n\n  return (\n    <div className=\"gallery-wrap\">\n      <ul className=\"gallery-content\">\n        {pictures.map((el, i) => (\n          <li key={i} className={`gallery-item`}>\n            <a href=\"javascript:\" onClick={() => handleSelected(i)}>\n              <img src={el.photo} />\n            </a>\n          </li>\n        ))}\n      </ul>\n\n      <div className={`modal-box${showModal ? ' active' : ''}`}>\n        <div className=\"modal-box-content\">\n          <div className=\"close-btn-wrap\">\n            <span onClick={handleClosePopup}>\n              <svg\n                fill=\"white\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns=\"http://www.w3.org/1999/xlink\"\n                x=\"0px\"\n                y=\"0px\"\n                width=\"100%\"\n                height=\"100%\"\n                viewBox=\"0 0 512 512\"\n                xml=\"preserve\"\n              >\n                <path d=\"M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4 L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1 c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1 c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z\"></path>\n              </svg>\n            </span>\n          </div>\n          <div className=\"img-wrap\">\n            <img src={pictures.filter((el, index) => index === currentPic)[0]?.photo} />\n          </div>\n          <div className=\"arrows-wrap\">\n            <div className={`prev-arrow ${currentPic === START_IDX ? 'disabled' : ''} `} onClick={moveBack}>\n              <svg\n                fill=\"white\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns=\"http://www.w3.org/1999/xlink\"\n                x=\"0px\"\n                y=\"0px\"\n                width=\"100%\"\n                height=\"100%\"\n                viewBox=\"0 0 512 512\"\n                xml=\"preserve\"\n              >\n                <path d=\"M213.7,256L213.7,256L213.7,256L380.9,81.9c4.2-4.3,4.1-11.4-0.2-15.8l-29.9-30.6c-4.3-4.4-11.3-4.5-15.5-0.2L131.1,247.9 c-2.2,2.2-3.2,5.2-3,8.1c-0.1,3,0.9,5.9,3,8.1l204.2,212.7c4.2,4.3,11.2,4.2,15.5-0.2l29.9-30.6c4.3-4.4,4.4-11.5,0.2-15.8 L213.7,256z\"></path>\n              </svg>\n            </div>\n            <div className={`next-arrow ${currentPic === pictures.length - 1 ? 'disabled' : ''}`} onClick={moveForward}>\n              <svg\n                fill=\"white\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns=\"http://www.w3.org/1999/xlink\"\n                x=\"0px\"\n                y=\"0px\"\n                width=\"100%\"\n                height=\"100%\"\n                viewBox=\"0 0 512 512\"\n                xml=\"preserve\"\n              >\n                <path d=\"M298.3,256L298.3,256L298.3,256L131.1,81.9c-4.2-4.3-4.1-11.4,0.2-15.8l29.9-30.6c4.3-4.4,11.3-4.5,15.5-0.2l204.2,212.7 c2.2,2.2,3.2,5.2,3,8.1c0.1,3-0.9,5.9-3,8.1L176.7,476.8c-4.2,4.3-11.2,4.2-15.5-0.2L131.3,446c-4.3-4.4-4.4-11.5-0.2-15.8 L298.3,256z\"></path>\n              </svg>\n            </div>\n          </div>\n          <div className=\"count-wrap\">\n            <span>{currentPic + 1}</span> of {pictures.length}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { CommentBox } from '../Components/CommentBox';\nimport { PageFrame } from '../Components/PageFrame';\nimport { Loader } from '../Components/Loader';\nimport { AuthorField } from '../Components/AuthorField';\nimport SignIn from '../Components/SignIn';\nimport { ImageGallery } from '../Components/ImageGallery';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { CloudTag } from '../Components/CloudTag';\nimport { useFetch } from '../utils/useFetch';\nimport { PARAM_ID, replaceParams, CATEGORY, PARAM_CATEGORY } from '../constants/routes';\nimport { RECIPE } from '../constants/url';\n\nconst RecipePage = (props) => {\n  const [ticked, setTick] = useState([]);\n  const recipeId = props.match.params.id;\n\n  const { data: recipeData, error, fetching } = useFetch(replaceParams(RECIPE, new Map([[PARAM_ID, recipeId]])));\n\n  useEffect(() => {\n    if (!recipeData?.ingredients) return;\n    setTick(recipeData.ingredients.map(() => false));\n  }, [recipeData]);\n\n  const tickFn = (index) => {\n    ticked[index] = !ticked[index];\n    setTick([...ticked]);\n  };\n  return (\n    <PageFrame>\n      {fetching ? (\n        <div className=\"loader-container\">\n          <Loader />\n        </div>\n      ) : !recipeData || error || recipeData.error ? (\n        <div className=\"error-cont\">Recipe not found...</div>\n      ) : (\n        <React.Fragment>\n          <div className=\"column-content\">\n            <div className=\"article-container\">\n              <article className=\"post-col-main complete\">\n                <div className=\"post-thumb\">\n                  <a href=\"javascript:\" title=\"\">\n                    <img width=\"100%\" src={recipeData.photos.length && recipeData.photos[0].photo} />\n                  </a>\n                </div>\n                <section className=\"post-body\">\n                  <h1 className=\"post-title\">\n                    <a href=\"javascript:\" title={recipeData.title} rel=\"bookmark\">\n                      {recipeData.title}\n                    </a>\n                  </h1>\n                  <div className=\"entry-info\">\n                    <span>Written by </span>\n                    <span id=\"author-info\">\n                      <a href=\"javascript:\" title={recipeData.fullName}>\n                        {recipeData.fullName}\n                      </a>\n                    </span>\n                    <span className=\"entry-date\">\n                      <time className=\"entry-date comments-link\" dateTime={recipeData.addDatetime}>\n                        {moment.unix(recipeData.addDatetime).format('MM/DD/YYYY')}\n                      </time>\n                    </span>\n                    <span className=\"comments-link\">in </span>\n                    {recipeData.category.map((categ, index) => (\n                      <span className=\"category-link-recipe\" key={index}>\n                        <Link to={replaceParams(CATEGORY, new Map([[PARAM_CATEGORY, categ]]))}>{categ.charAt(0).toUpperCase() + categ.slice(1)}</Link>\n                      </span>\n                    ))}\n                  </div>\n                  <div className=\"post-content\">\n                    <p>{recipeData.description}</p>\n                  </div>\n                </section>\n                <section className=\"ingredients\">\n                  <h3>Ingredients</h3>\n                  <p></p>\n                  <ul>\n                    {recipeData.ingredients.map((ingr, index) => (\n                      <li key={index} onClick={() => tickFn(index)} className={ticked[index] ? 'clicked' : ''}>\n                        <span className={`tick ${ticked[index] ? 'ticked' : ''}`} />\n                        {ingr}\n                      </li>\n                    ))}\n                  </ul>\n                  <p></p>\n                </section>\n                <section className=\"directions\">\n                  <h3>Directions</h3>\n                  <p></p>\n                  <ol>\n                    {recipeData.directions.map((direction, index) => (\n                      <li key={index}>{direction}</li>\n                    ))}\n                  </ol>\n                </section>\n                <section className=\"more-photos\">\n                  <h3>\n                    <em>More photos</em>\n                  </h3>\n                  <div className=\"more-photos-col\">\n                    <ImageGallery pictures={recipeData.photos} />\n                  </div>\n                </section>\n                <CommentBox recipeId={recipeId} />\n              </article>\n            </div>\n            <div className=\"aside-container\">\n              <aside>\n                <AuthorField data={recipeData} />\n                <SignIn />\n                <CloudTag />\n              </aside>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </PageFrame>\n  );\n};\n\nexport default RecipePage;\n"],"sourceRoot":""}