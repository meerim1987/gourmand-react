{"version":3,"sources":["webpack:///./src/Components/SignIn.jsx","webpack:///./src/Pages/SignInPage.jsx"],"names":["initForms","userName","password","initFormErrors","usernameError","passwordError","SignIn","useState","fields","setFields","errors","setErrors","history","useHistory","useFetch","replaceParams","LOGIN","Map","PARAM_EMAIL","PARAM_PASSWORD","credentials","content","data","get","useEffect","success","sessionStorage","setItem","reset","fullName","window","toaster","addMessage","getItem","push","handleChange","target","name","value","handleSubmit","e","a","preventDefault","stateUpdate","Object","keys","forEach","fieldName","className","onChange","type","placeholder","userNameError","onClick","SignInPage","to"],"mappings":"8wBAMA,IAAMA,EAAY,CAChBC,SAAU,GACVC,SAAU,IAGNC,EAAiB,CACrBC,eAAe,EACfC,eAAe,GAiGFC,IA9FA,WAAM,MACSC,mBAAS,EAAD,GAAMP,IADvB,WACZQ,EADY,KACJC,EADI,OAESF,mBAAS,EAAD,GAAMJ,IAFvB,WAEZO,EAFY,KAEJC,EAFI,KAGbC,EAAUC,cAHG,EAKYC,YAC7BC,YACEC,IACA,IAAIC,IAAI,CACN,CAACC,IAAaV,aAAd,EAAcA,EAAQP,UACtB,CAACkB,IAAgBX,aAAjB,EAAiBA,EAAQN,cAG7B,EACA,CAAEkB,YAAa,YATHC,EALK,EAKXC,KAAeC,EALJ,EAKIA,IAYvBC,qBAAU,WACR,GAAgB,OAAZH,EAEJ,GAAIA,EAAQI,QAAS,CACnBC,eAAeC,QAAQ,cAAc,GACrCC,IACA,IAAMC,EAAWR,EAAQQ,SACzBC,OAAOC,QAAQC,WAAW,YAAcH,EAAW,IAAK,QACxDH,eAAeC,QAAQ,OAAQE,GAG3BH,eAAeO,QAAQ,WACzBrB,EAAQsB,KAAKR,eAAeO,QAAQ,YAEpCrB,EAAQsB,KAAK,UAGfJ,OAAOC,QAAQC,WAAW,oCAAqC,WAEhE,CAACX,IAEJ,IAAMc,EAAe,SAAC,GAAgC,QAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC7B,EAAU,EAAD,KAAMD,GAAN,UAAe6B,EAAOC,MAG3BV,EAAQ,WACZnB,EAAU,EAAD,GAAMT,IACfS,EAAU,EAAD,GAAMN,KAGXoC,EAAY,+BAAG,WAAOC,GAAP,eAAAC,EAAA,sDACnBD,EAAEE,iBAEIC,EAAc,GACpBC,OAAOC,KAAK7C,GAAW8C,SAAQ,SAACC,GAAD,OAAgBJ,EAAY,GAAD,OAAII,EAAJ,WAAyBvC,EAAOuC,MAC1FpC,EAAUgC,GAELnC,EAAOP,UAAaO,EAAON,SAG9BqB,IAFAO,OAAOC,QAAQC,WAAW,yBAA0B,SARnC,2CAAH,sDAclB,OACE,6BAASgB,UAAU,eACjB,8BACE,kCACE,4BAAQA,UAAU,SAAlB,iBACA,+BACE,2BACEV,MAAO9B,EAAOP,SACdgD,SAAUd,EACVe,KAAK,OACLb,KAAK,WACLc,YAAY,WACZH,UAAW,QAAUtC,EAAO0C,cAAgB,gBAAkB,OAGlE,+BACE,2BACEd,MAAO9B,EAAON,SACd+C,SAAUd,EACVe,KAAK,WACLb,KAAK,WACLW,UAAW,QAAUtC,EAAOL,cAAgB,gBAAkB,IAC9D8C,YAAY,cAGhB,2BAAOD,KAAK,SAASZ,MAAM,QAAQe,QAASd,IAC5C,yBAAKS,UAAU,qB,iCCvGzB,mDAiBeM,UAZI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,yBAAKN,UAAU,qBACb,qDACA,0BAAMA,UAAU,gBACd,kBAAC,IAAD,CAAMO,GAAG,YAAT,WADF","file":"5.bundle.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useFetch } from '../utils/useFetch';\nimport { LOGIN } from '../constants/url';\nimport { PARAM_EMAIL, PARAM_PASSWORD, replaceParams } from '../constants/routes';\n\nconst initForms = {\n  userName: '',\n  password: '',\n};\n\nconst initFormErrors = {\n  usernameError: false,\n  passwordError: false,\n};\n\nconst SignIn = () => {\n  const [fields, setFields] = useState({ ...initForms });\n  const [errors, setErrors] = useState({ ...initFormErrors });\n  const history = useHistory();\n\n  const { data: content, get } = useFetch(\n    replaceParams(\n      LOGIN,\n      new Map([\n        [PARAM_EMAIL, fields?.userName],\n        [PARAM_PASSWORD, fields?.password],\n      ])\n    ),\n    true,\n    { credentials: 'include' }\n  );\n\n  useEffect(() => {\n    if (content === null) return;\n\n    if (content.success) {\n      sessionStorage.setItem('isLoggedIn', true);\n      reset();\n      const fullName = content.fullName;\n      window.toaster.addMessage('Welcome, ' + fullName + '!', 'info');\n      sessionStorage.setItem('name', fullName);\n\n      // Redirect to previous page or to homepage\n      if (sessionStorage.getItem('prevUrl')) {\n        history.push(sessionStorage.getItem('prevUrl'));\n      } else {\n        history.push('/');\n      }\n    } else {\n      window.toaster.addMessage('Not a valid username or password!', 'error');\n    }\n  }, [content]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    setFields({ ...fields, [name]: value });\n  };\n\n  const reset = () => {\n    setFields({ ...initForms });\n    setFields({ ...initFormErrors });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const stateUpdate = {};\n    Object.keys(initForms).forEach((fieldName) => (stateUpdate[`${fieldName}Error`] = !fields[fieldName]));\n    setErrors(stateUpdate);\n\n    if (!fields.userName || !fields.password) {\n      window.toaster.addMessage('The field is required!', 'error');\n    } else {\n      get();\n    }\n  };\n\n  return (\n    <section className=\"login-field\">\n      <form>\n        <fieldset>\n          <legend className=\"title\">Please log in</legend>\n          <label>\n            <input\n              value={fields.userName}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"userName\"\n              placeholder=\"Username\"\n              className={'text' + (errors.userNameError ? ' error-active' : '')}\n            />\n          </label>\n          <label>\n            <input\n              value={fields.password}\n              onChange={handleChange}\n              type=\"password\"\n              name=\"password\"\n              className={'text' + (errors.passwordError ? ' error-active' : '')}\n              placeholder=\"Password\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Login\" onClick={handleSubmit} />\n          <div className=\"result-cont\" />\n        </fieldset>\n      </form>\n    </section>\n  );\n};\n\nexport default SignIn;\n","import React from 'react';\nimport { PageFrame } from '../Components/PageFrame';\nimport SignIn from '../Components/SignIn';\nimport { Link } from 'react-router-dom';\n\nconst SignInPage = () => (\n  <PageFrame>\n    <SignIn />\n    <div className=\"sign-up-here-note\">\n      <span>Not yet a gourmand?</span>\n      <span className=\"sign-up-link\">\n        <Link to=\"/sign-up\">Sign up</Link>here üçù\n      </span>\n    </div>\n  </PageFrame>\n);\n\nexport default SignInPage;\n"],"sourceRoot":""}