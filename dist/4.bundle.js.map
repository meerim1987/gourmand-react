{"version":3,"sources":["webpack:///./src/Components/CloudTag.jsx","webpack:///./src/Components/SignUp.jsx","webpack:///./src/Pages/SignUpPage.jsx"],"names":["CloudTag","ctgInfo","useFetch","CATEGORIES_INFO","data","Fragment","className","Object","keys","Categories","map","ctg","index","key","to","replaceParams","CATEGORY","Map","PARAM_CATEGORY","count","EMAIL_REGEXP","initFields","fullName","userName","email","summary","password","passwordRepeat","SignUp","useState","fullNameError","userNameError","emailError","summaryError","passwordError","passwordRepeatError","uploadedFilesError","uploaderReset","passwordsMatchErrorFlag","passwordsValidationErrorFlag","passwordLengthErrorFlag","checkbox","emailValidError","errors","setErrors","fields","setFields","redirect","setRedirect","handleChange","e","name","target","value","type","length","substring","window","toaster","addMessage","handleSubmit","a","preventDefault","stateToUpdate","forEach","fieldName","test","str","trim","dataToSend","values","reduce","agr","val","filter","fetch","getUrl","SIGNUP","method","headers","Accept","body","JSON","stringify","rawResponse","json","content","success","message","console","error","FNClassName","UNClassName","emailClassName","summaryClassName","passwordClassName","passwordRepClassName","onChange","placeholder","id","checked","onClick","SignUpPage","PageFrame"],"mappings":"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","file":"4.bundle.js","sourcesContent":["import React from 'react';\nimport { Categories } from '../constants/data';\nimport { Link } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { useFetch } from '../utils/useFetch';\nimport { CATEGORIES_INFO } from '../constants/url';\nimport { CATEGORY, PARAM_CATEGORY, replaceParams } from '../constants/routes';\n\nexport const CloudTag = () => {\n  const { data: ctgInfo } = useFetch(CATEGORIES_INFO);\n\n  return (\n    <React.Fragment>\n      {ctgInfo ? (\n        <div className=\"links-cloud-wrap\">\n          <h3 className=\"title\">Categories</h3>\n          <div className=\"links-cloud\">\n            {Object.keys(Categories).map((ctg, index) => (\n              <Link key={index} to={replaceParams(CATEGORY, new Map([[PARAM_CATEGORY, ctg]]))}>\n                {ctg}\n                <span className=\"ctg-count\">{ctgInfo?.[ctg]?.count || 0}</span>\n              </Link>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div className=\"loader-container\">{<Loader />}</div>\n      )}\n    </React.Fragment>\n  );\n};\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getUrl, SIGNUP } from '../constants/url';\n\nconst EMAIL_REGEXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst MAX_CHARS = 500;\nconst LENGTH_ERROR = 'Password should be minimum 8 chars!';\nconst MATCH_ERROR = 'Passwords do not match!';\nconst VALIDATION_ERROR = 'Not a valid password (should contain at least one uppercase, one lowercase and one number)!';\nconst EMAILERROR = 'Not a valid email address!';\nconst MIN_PASSWORD_LENGTH = 8;\n\nconst initFields = {\n  fullName: '',\n  userName: '',\n  email: '',\n  summary: '',\n  password: '',\n  passwordRepeat: '',\n};\n\nexport const SignUp = () => {\n  const [errors, setErrors] = useState({\n    fullNameError: false,\n    userNameError: false,\n    emailError: false,\n    summaryError: false,\n    passwordError: false,\n    passwordRepeatError: false,\n    uploadedFilesError: false,\n    uploaderReset: false,\n    passwordsMatchErrorFlag: false,\n    passwordsValidationErrorFlag: false,\n    passwordLengthErrorFlag: false,\n    checkbox: false,\n    emailValidError: false,\n  });\n\n  const [fields, setFields] = useState({ ...initFields });\n  const [redirect, setRedirect] = useState(false);\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    let value = e.target.value;\n\n    if (e.target.type === 'textarea') {\n      if (value.length > MAX_CHARS) {\n        value = value.substring(0, MAX_CHARS);\n        window.toaster.addMessage(`Max limit is ${MAX_CHARS} chars!`, `error`);\n      }\n    }\n    setFields({ ...fields, [name]: value });\n  };\n\n  const showPassword = (e) => {\n    setErrors({ ...errors, checkbox: e.target.checked });\n  };\n\n  const reset = () => {\n    setFields({ ...initFields });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const stateToUpdate = {};\n\n    const fieldsArr = ['fullName', 'userName', 'email', 'summary', 'password', 'passwordRepeat'];\n\n    fieldsArr.forEach((fieldName) => {\n      stateToUpdate[`${fieldName}Error`] = !fields[fieldName];\n    });\n\n    if (!stateToUpdate.emailError) {\n      stateToUpdate.emailValidError = !EMAIL_REGEXP.test(fields.email);\n    }\n\n    if (!stateToUpdate.passwordError) {\n      stateToUpdate.passwordLengthErrorFlag = fields.password.length < MIN_PASSWORD_LENGTH;\n      stateToUpdate.passwordsValidationErrorFlag = false;\n    }\n\n    if (!stateToUpdate.passwordError && !stateToUpdate.passwordLengthErrorFlag) {\n      const str = fields.password;\n      stateToUpdate.passwordsValidationErrorFlag = !(/[A-Z]/.test(str) && /[a-z]/g.test(str) && /[0-9]/g.test(str));\n      stateToUpdate.passwordLengthErrorFlag = false;\n    }\n\n    stateToUpdate.passwordsMatchErrorFlag = fields.password.trim() !== fields.passwordRepeat.trim();\n    const dataToSend = {};\n\n    setErrors({ ...errors, ...stateToUpdate });\n\n    if (Object.values(stateToUpdate).reduce((agr, val) => agr || val, false)) {\n      window.toaster.addMessage('Please fill in form below!', 'error');\n      return;\n    }\n\n    const newFields = Object.keys(initFields).filter((fieldName) => fieldName !== 'passwordRepeat');\n    newFields.forEach((fieldName) => (dataToSend[fieldName] = fields[fieldName]));\n\n    const rawResponse = await fetch(getUrl(SIGNUP), {\n      method: 'post',\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(dataToSend),\n    });\n    try {\n      const content = await rawResponse.json();\n\n      if (content.success) {\n        window.toaster.addMessage('Welcome, gourmand!', 'info');\n        reset();\n        setRedirect(true);\n      } else {\n        window.toaster.addMessage(content.message, 'error');\n      }\n    } catch (e) {\n      console.error(e);\n      window.toaster.addMessage('Server returned undexpected response...', 'error');\n    }\n  };\n\n  const FNClassName = errors.fullNameError ? ' error-active' : '';\n  const UNClassName = errors.userNameError ? ' error-active' : '';\n  const emailClassName = errors.emailError || errors.emailValidError ? ' error-active' : '';\n  const summaryClassName = errors.summaryError ? ' error-active' : '';\n  const passwordClassName =\n    errors.passwordError || errors.passwordsValidationErrorFlag || errors.passwordLengthErrorFlag\n      ? ' error-active'\n      : '';\n  const passwordRepClassName = errors.passwordsMatchErrorFlag ? ' error-active' : '';\n\n  return (\n    <section className=\"login-field\">\n      {redirect && <Redirect to=\"/sign-in\" />}\n      <form>\n        <fieldset>\n          <legend className=\"title\">Please Sign Up</legend>\n          <div className=\"data-wrap\">\n            <div className=\"data-col-1\">\n              <label>\n                <input\n                  value={fields.fullName}\n                  onChange={handleChange}\n                  type=\"text\"\n                  name=\"fullName\"\n                  placeholder=\"Full name\"\n                  className={'text' + FNClassName}\n                />\n              </label>\n              <label>\n                <input\n                  value={fields.userName}\n                  onChange={handleChange}\n                  type=\"text\"\n                  name=\"userName\"\n                  placeholder=\"Username\"\n                  className={'text' + UNClassName}\n                />\n              </label>\n              <label>\n                <input\n                  value={fields.email}\n                  onChange={handleChange}\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  className={'text' + emailClassName}\n                />\n                <div className=\"password-errors-wrap\">{errors.emailValidError && EMAILERROR}</div>\n              </label>\n              <textarea\n                value={fields.summary}\n                onChange={handleChange}\n                name=\"summary\"\n                placeholder=\"Describe yourself...\"\n                className={'text' + summaryClassName}\n              />\n              <label>\n                <input\n                  value={fields.password}\n                  onChange={handleChange}\n                  type={errors.checkbox ? 'text' : 'password'}\n                  id=\"password\"\n                  name=\"password\"\n                  className={'text ' + passwordClassName}\n                  placeholder=\"Password\"\n                />\n              </label>\n              <div className=\"password-errors-wrap\">\n                {errors.passwordsValidationErrorFlag && <div>{VALIDATION_ERROR}</div>}\n                {errors.passwordLengthErrorFlag && <div>{LENGTH_ERROR}</div>}\n              </div>\n              <label>\n                <input type=\"checkbox\" onChange={showPassword} checked={errors.checkbox} />\n                Show password\n              </label>\n              <label>\n                <input\n                  value={fields.passwordRepeat}\n                  onChange={handleChange}\n                  type=\"password\"\n                  name=\"passwordRepeat\"\n                  className={'text ' + passwordRepClassName}\n                  placeholder=\"Confirm password\"\n                />\n              </label>\n              <div className=\"password-errors-wrap\">{errors.passwordsMatchErrorFlag && <div>{MATCH_ERROR}</div>}</div>\n            </div>\n            <div className=\"data-col-2\" />\n          </div>\n          <input id=\"signUp\" onClick={handleSubmit} type=\"submit\" value=\"Sign up\" />\n          <div className=\"result-cont\" />\n        </fieldset>\n      </form>\n    </section>\n  );\n};\n","import React from 'react';\nimport { PageFrame } from '../Components/PageFrame';\nimport { SignUp } from '../Components/SignUp';\nimport { CloudTag } from '../Components/CloudTag';\n\nconst SignUpPage = () => {\n  return (\n    <PageFrame>\n      <div className=\"column-content\">\n        <div className=\"article-container\">\n          <SignUp />\n        </div>\n        <div className=\"aside-container\">\n          <CloudTag />\n        </div>\n      </div>\n    </PageFrame>\n  );\n};\n\nexport default SignUpPage;\n"],"sourceRoot":""}